<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>独立游戏开发日志 - Day1</title>
    <link href="/2021/04/25/UE4day1/"/>
    <url>/2021/04/25/UE4day1/</url>
    
    <content type="html"><![CDATA[<h1 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h1><p>经过这么久的 <em><del>摸鱼</del></em> 学习积累终于开始制作了！目前项目类型还没有完全确定，但是应该是风格化PRG游戏，有技能树和解密元素。</p><blockquote><p>上周换了2根内存条，之前用的贼船对AMD超频优化实在是太烂了，这次换了科赋雷霆的条子，上了3600hz直接起飞~</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/IMG_20210420_131345.jpg" alt="雷霆16G"></p><p>16岁的时候就有过很明确的想要从事游戏行业的愿望，这么多年自己也在逐渐从玩家向开发者过渡。在这个月我终于成功进入学校的艺术设计院学习 <em>(工业设计专业)</em> ，虽然并不是和游戏直接相关的专业，但是同院的数字媒体艺术是直接相关，未来可能考虑修一个双学位(前提是精力允许)。</p><p>至于为什么要搞游戏制作，这里就不展开说了，能给你扯一长段抒情散文体自传…毕竟这个文章主要是一个开发日志。</p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/20210425213833.png" alt="项目截图"></p><h1 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h1><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><ul><li>Win10</li><li>VS 2020</li><li>UE4</li><li>Blender </li></ul><h2 id="项目内容"><a href="#项目内容" class="headerlink" title="项目内容"></a>项目内容</h2><ul><li><p>基本人物角色建立</p><p>包括NPC，玩家都可以通用的一套人物，模型的导入，输入控制配置，行动速度配置等。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/20210425220328.png" alt="角色移动"></p><ul><li>基础移动功能的蓝图实现</li></ul><p>包括控制器（键盘）接收、移动、跳跃、蹲伏和奔跑</p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/20210425220628.png" alt="基础移动-蓝图"></p><ul><li>基础HUD的配置</li></ul><p>基础HUD的功能实现，目前包括生命、体力、法力三个数值的进度条展示和功能实现以及体力和奔跑事件的绑定</p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/20210425220902.png" alt="HUD-蓝图"></p><h2 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h2><p><a href="https://www.bilibili.com/video/BV1Aq4y1J7rq">B站</a></p><iframe src="//player.bilibili.com/player.html?aid=545306595&bvid=BV1Aq4y1J7rq&cid=329163191&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>知识浅薄，道阻且长，发这个文章绝非炫耀卖弄，仅仅是自我激励和记录，独立游戏开发是一件非常漫长而艰难的事情，希望这个日志能够一直更新下去！</p><p>也在寻找志同道合的小伙伴一起开发，美术或者程序方向的最好，能力什么的无所谓，只要你有一颗真正热爱游戏的心，就一起来吧！</p><p><strong>我的联系方式在顶端导航栏可以找到，你也可以直接在本文章页留言</strong></p><p><em>祝你前程似锦</em></p>]]></content>
    
    
    <categories>
      
      <category>开发日志</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>开发日志</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小 心 二 次 元</title>
    <link href="/2021/03/20/WeebsIn/"/>
    <url>/2021/03/20/WeebsIn/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是“二次元”"><a href="#什么是“二次元”" class="headerlink" title="什么是“二次元”"></a>什么是“二次元”</h2><p><em>二次元</em> 这个词想必我们听了已经不止一两遍了哈😅，而且许多网络“二次元”的憨憨确实让这个词成功变了味，</p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/2ciyuan.jpg" alt="呐呐呐"></p><blockquote><p>“守护最美好的二次元！”</p><p>“你这么喜欢二次元，一定很可怜吧”</p></blockquote><p><em>真正的老二次元：“二次元傻 *”</em></p><h3 id="我对“二次元”的定义"><a href="#我对“二次元”的定义" class="headerlink" title="我对“二次元”的定义"></a>我对“二次元”的定义</h3><p>其实 <strong>👴就是二次元</strong></p><blockquote><p>在我漫长的二次元生涯中我明白了，宅男是有极限哒！</p></blockquote><p>对动画略有了解，不敢说很懂，但至少涉猎很广。<br>我个人喜欢看老番，喜欢看剧情向的作品。</p><p>而且一定要能激发观众的思考才行</p><p>所以我仅仅举几个我看过的例子来对动画领域的所谓“二次元”做一个区分：</p><ul><li>二刺螈：俺妹、政宗、出包</li><li>番剧：刀剑、巨人、屑魔女</li><li>动画片：星际牛仔、奇诺、攻壳</li><li>看傻了：棍勇、POP子、迷家</li></ul><blockquote><p><em>你怎么没看JOJO?</em></p><p><em>“没写≠没看”</em></p><p>别骂了，再看了</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/TokyoAnime.jpg" alt="毫无违和感"></p><h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><p>写一些自己看过的感觉还不错的作品，我会尽量无剧透推荐</p><h3 id="奇诺之旅"><a href="#奇诺之旅" class="headerlink" title="奇诺之旅"></a>奇诺之旅</h3><p>大一的假期在家里补完了，感觉非常舒服，剧情平缓温和又印象深刻，无压力看番，公路片的经典之作</p><p>女主奇诺应该是我第一个接触的具有男孩气质的女生，这样的加持通常会让人物显得非常帅气，但在故事的进行中又能发现点点滴滴她生为女生柔软的一面，真让人欲罢不能啊。</p><p>采用单元剧的叙事方式几乎让每一集的剧情都独立存在，这样的操作极大的增加了对故事剧情的构建难度和深度，奇诺的表现非常好，每集都争取采用不同的立意和剧情，这让我们的女主人物形象愈发立体饱满。</p><blockquote><p>“不知道为什么，我有时候会觉得自己是不是无可救药又渺小，是不是特别肮脏的人；但同时我又会觉得其他的东西，比如说这个世界，和其他人的生存方式，这一切都是那么美好，是那么地惹人怜爱。我觉得自己就是为了更了解这些，才踏上旅途的。”</p></blockquote><p><img src="http://shp.qpic.cn/collector/2777378464/1be4d7a6-11fe-49a6-a231-20f6cb246306/0" alt="奇诺"></p><p><em>P.S. 作品在17年出了重置版本，剧情对比原版有改动，建议全看，毕竟这可是双倍快乐啊！</em></p><p>观看：</p><p><a href="https://www.bilibili.com/bangumi/play/ss33327/">奇诺之旅_B站</a></p><h3 id="狼与香辛料"><a href="#狼与香辛料" class="headerlink" title="狼与香辛料"></a>狼与香辛料</h3><p>说到公路片那就不得不提 <em>狼与香辛料</em> ，所有的公路片中，这可能是最为温馨，最甜（指发糖）的。</p><p>狼（兽）人（耳）少女赫萝和旅（江）行（湖）商（骗）人（子）罗伦斯的组合让人耳目一新，既有二次元元素又不脱离幻想风格，我看完之后真的是久久无法平静，总之很希望能赶快出续集，不过原著漫画已经更了很多了，顶不住的朋友可以去看看。</p><p>节奏合适，剧情流畅，伴随主角们的旅行感受各地的风土人情，同时这些东西真不是简简单单的二刺螈幻想，反而是很有考究，设定严谨的编排。</p><p>不管怎么说，这是一部让我拖了很久才追完的，不是说它不好看，而是太好看而不敢追下去，第一季看完就迫不及待看第二季，看了一半就不想看了，还是因为太舍不得了，有很多人看这部番主要看他们撒狗粮，而我更在意的是夫妻二人通过通商，感情线的逐渐变化，这不仅仅是撒狗粮，可以说也是科普，通商的套路，以及面对困难如何解决，主要还是夫妻二人的 <em>情话</em> 。</p><blockquote><p>“持续着幸福的故事。那种东西是不存在的。当然，跟汝的交流非常开心，真的非常开心。开心到几乎要把汝一口吃下去的程度。</p><p>但是，不管是怎样美味的佳肴，一直吃着同样东西的话，会怎么样？应该会厌倦吧？而且最令人困扰的是，咱如果想要获得新的乐趣，就只能不断采取过激的行动。接下来等待着咱们的是什么，汝也应该知道吧？</p><p>最后咱们无论如何渴求也无法得到满足，所有的快乐交流都将尽数风化，只有褪色的快乐残留在记忆中。那时候就真的会想，刚相遇的时候明明是那么快乐呐。</p><p>因此，咱就觉得很害怕。害怕让这种快乐加速磨灭的、汝的…………温柔。”</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/heluo.png" alt="KKSK"></p><p><em>P.S.</em> 第一季仅能在A站观看</p><p>观看：</p><p><a href="https://www.acfun.cn/bangumi/aa6000817">狼与香辛料第一季_A站</a></p><p><a href="https://www.bilibili.com/bangumi/play/ss1072/">狼与香辛料第二季_B站</a></p><h3 id="四畳半神话大系"><a href="#四畳半神话大系" class="headerlink" title="四畳半神话大系"></a>四畳半神话大系</h3><p><strong>这东西真的NB</strong></p><p>我大概在大一花了一晚上连着看完了11集，就像是一个抗药性很强的瘾君子连续磕了10次大剂量吗啡，然后第11次直接溃堤喷射，致死量享受</p><p>我之所以这么说是因为这部作品的铺垫前摇长的离谱，这里我不方便说了，这个作品很难在不剧透的情况下介绍安利，我就简单说点吧。</p><ul><li>少有的以大学生为主角的作品</li><li>汤浅政明的作画让这部作品非常意识流（对一些观众可能晦涩难懂，容易丢失细节）</li><li>但是这么处理是最好的方式了，男主丰富的心理活动不是简单的传统画面就可以展示</li><li>这部作品真的让人切身的感受到：平行世界不会让你变得更酷，我们能做的就是<strong>抓住</strong>当下</li><li><strong>注意：</strong> 超长前摇很容易劝退，但是只要你坚持吃完，相信我，只能吹爆</li></ul><p>本片充斥着无逻辑的剧情展开，思绪如信马由缰、上天入地；叙事节奏速率不齐、徐疾难辨，人物设定复杂而多元，美术风格独树一帜、色彩鲜明浓烈富有冷抽象韵味，人像作画大胆夸张，极富张力与个性，配合高速的对白、碎片化的荧幕表现效果，有一种凌乱中俨然肃穆的“怪奇美”。</p><p>本片以“假如我能够”为情感前提，针对当下被贩卖焦虑的“大学生症候群”提出了狡辩式的的解决方案——“若是能重来，我还会像现在这样么？”本片顺着这种思路展开了天马行空的幻想，在平行时空中，不仅描绘着属于男主的校园生活景貌，更描绘着当下许许多多同龄人的普遍难题——能否打破自我，走出自我，正视生活，正视世界。</p><blockquote><p>“同学，如果良机来了，千万别让它跑掉。良机来的时候，不可以漫不经心地做同样的事。请把心一横，采取和至今截然不同的做法抓住它。这么一来，不满就会消失，你就能走上另一条人生道路。尽管那里也会有不同的不满。你应该很清楚我在讲什么。”</p><p>“不可以毫无限制地使用可能性这个字眼。限制我们的，不是我们拥有的可能性，而是我们拥有的不可能性。”</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/20210320230330.png" alt="四畳半主义者"></p><p><em>P.S.</em> 看完之后听配乐真的百感交集</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=678617&auto=0&height=66"></iframe><p>观看：</p><p><a href="https://www.bilibili.com/bangumi/play/ep82447">四畳半神话大系_B站</a></p><h3 id="星际牛仔"><a href="#星际牛仔" class="headerlink" title="星际牛仔"></a>星际牛仔</h3><h4 id="永远的神作，永远"><a href="#永远的神作，永远" class="headerlink" title="永远的神作，永远"></a>永远的神作，永远</h4><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/Faya.png" alt="Faye Valentine"></p><p><em>（我心里最好的作品，以至于我不敢开始写，等我准备好了我再回来吧）</em></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=592699&auto=0&height=66"></iframe> <p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/SpacecowboyTV.png" alt="ssw.SCRATCH.ts.mr"></p><p>观看：</p><p><a href="http://www.imomoe.ai/view/4817.html">星际牛仔_樱花</a></p><hr><p><em>未完待续</em></p>]]></content>
    
    
    <categories>
      
      <category>二次元</category>
      
      <category>推荐01</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>随笔</tag>
      
      <tag>二次元</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>异乡逐鹿的少年</title>
    <link href="/2021/03/18/KillMyselfOfPast/"/>
    <url>/2021/03/18/KillMyselfOfPast/</url>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=26128472&auto=0&height=66"></iframe><hr><h2 id="重逢"><a href="#重逢" class="headerlink" title="重逢"></a>重逢</h2><p>小马的天气总是潮湿多雨的，不过还好住在顶层，若是晴天，推开窗帘就能立刻沐浴阳光。</p><p>外面还在下着雨，而我陷入了思考，最近我常常游离于思维迷宫和现实世界，之前也有过，但我告诉自己这样并不好，可是最近却愈发频繁。</p><p>因为我知道，思维的冬眠不能真正改变自己，也许是时候醒来了</p><h2 id="幻梦"><a href="#幻梦" class="headerlink" title="幻梦"></a>幻梦</h2><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/red-horse..jpg" alt="一场幻梦"></p><p>也是去年的3月，那时我还年轻，一个有<strong>追求</strong>和<strong>理想</strong>大学生，在教务系统上提交了转专业申请，申请转入 <em>计算机科学与技术</em> 专业。</p><p>我藏身于灰域与黑夜，未曾向周遭的人提起过一言一字我的<strong>理想</strong>和<strong>愿景</strong>。</p><p>因为在我的内心深处，我害怕失败，害怕挫折和苦难</p><p>人们常说苦难是成功的基石，还有诸如 <em>“吃亏是福”</em> 的言论。但在我看来，这一切都荒谬可笑</p><blockquote><p>事实上，苦难就是苦难，苦难本身不会带来成功，苦难也不值得追求，磨练意志仅仅是因为苦难无法避免。 </p><p>———余华《活着》</p></blockquote><p>我做的一切也许源于我十四岁时的一场梦，也许是初中三年的人生，也许是十八岁前夕的那场雨…但无论是什么因素，我的经历和人生造就了现在的我，我把自己包裹在一场梦里，它支撑着我走完了大一的生涯。</p><p>同年六月的雨后，端午前夜，梦醒了</p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/SHITJWC.jpg" alt="2020/06/25"></p><hr><h2 id="冷夜"><a href="#冷夜" class="headerlink" title="冷夜"></a>冷夜</h2><blockquote><p>“…可惜你没成功，主要原因是计算机都是很多专业的第一名也申请转来，你很优秀，但一排名就比不过他们了..”</p><p>“你不要灰心！兴趣永远是最好的老师，你如果想继续学习我们计算机，可以辅修我们相关专业！”</p></blockquote><p><em><strong>我要把这座世界烧成灰，再建起一座城堡</strong></em></p><p>这算是什么呢？对失败者的怜悯？老师对学生最基本的安慰？也许它有自己的一套运作体系，但是现在我只觉得觉得心如刀割。</p><p>我永远忘不了那个冰冷的黑夜，看着手机里跳动字符的我是如何进行着残破的呼吸</p><p><em>我每每想到这里，只觉得胸膛憋屈，我也不愿再次提及</em></p><p><em><strong>我知道，我的心里有了一个心结</strong></em></p><p>带着家里人的安慰与教诲，朋友的开导，我强装温柔理智，在疫情结束后不得不回到这片伤心的荒原。</p><blockquote><p>少年回到了异乡，但是他早已无法缝补自己的旧梦和残破的心</p></blockquote><h2 id="异乡"><a href="#异乡" class="headerlink" title="异乡"></a>异乡</h2><p>苦难就是苦难，苦难的结束是才是常态。我只能重整待发，继续游离于灰域和荒原。</p><p><img src="https://hacbox.me/img/cate.jpg" alt="STALKER"></p><p>因为之前一直未对周遭的人透露愿景和理想，所以我的失败并没有人知晓，想到这里我在心里竟松了口气，真是可悲啊。</p><blockquote><p>“胜利者才会高歌，失败者只能沉默”</p></blockquote><p>我在漫长的生涯中头一次感到如此的绝望与迷茫，我的<strong>理想</strong>和<strong>愿景</strong>在现实面前是如此的不堪一击。</p><p><strong>“理想”</strong> 成了我的 <em>心结</em></p><p>兜兜转转，时间就来到2021年，我的心结甚至影响到了我正常的学习生活，很多次我看到周遭的现实，只想咒骂自己，这样的日子下，我不由得会对自己产生质疑和憎恨。</p><p>我在顶层的阳台眺望远处的街道，这座空气质量很差的小城也有自己的运行规则，我想起了一天半夜和我的朋友 <em>Cherry</em> 的对话：</p><blockquote><p>“你要知道，大多数人终其一生都不知道自己的理想，拥有理想在这个社会是一件很奢侈的事情”</p><p>“我希望你不要迷失自我，着手于眼下的生活，最重要的：不要透支自己的理想”</p><p>那只会让你本就脆弱的梦变得更加荒诞可笑</p></blockquote><p><strong>“不要透支自己的理想”</strong></p><p>这是多么浪漫的金句，我无法想象这是一位身处魔都的理工男能说出的话。</p><p>带着这样的信条，我活了下来，活到了2021</p><h2 id="梦醒"><a href="#梦醒" class="headerlink" title="梦醒"></a>梦醒</h2><p>2021年的元旦，我看了一部电影</p><p><em>今敏</em> 的动画电影 <em>《千年女优》</em></p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/20210318234426.png" alt="无论多远，我一定会去找你"></p><p>我花了一下午的时间在<a href="https://www.bilibili.com/bangumi/play/ss5297/">B站</a>看完了这部电影。</p><blockquote><p>观后感：很久没在看作品的时候看哭了</p></blockquote><h3 id="以下内容含有剧透"><a href="#以下内容含有剧透" class="headerlink" title="以下内容含有剧透"></a>以下内容含有剧透</h3><blockquote><p>这个故事流程其实非常简单，一个女演员用一生来追逐一个遥不可及的理想。</p><p>虽然叫做千年女优，但不玄幻，虽然是演员，但也不是单单为了讲演艺生涯或是表演追求，而是立意在——年轻人，要以怎样的姿态度过自己的一生。</p></blockquote><p>我看到三个场景：蒙太奇，警察送信，北海道雪原</p><p>哭了三次</p><p>为什么会流泪呢？我也说不清。</p><p>不过在我看到女主千代子一次次的被生活磨平，一次次的只能在电影中演绎真正的自己，以至于险些迷失了自我的时候，我也会感到十分揪心</p><p>毫无保留地被岁月消磨，就像我自己的那场梦一样。</p><p>也许这就是为什么我会和这个作品高度共鸣</p><p>但是当我看到那把钥匙再次出现的时候，我被女主坚定的意志折服了</p><blockquote><p>…一度因结婚远离演艺事业的女主角发现被骗的真相，又遇到了时隔久远的来信，孤身前往北海道寻找画家，但寻找的过程又和科幻系电影重合，成为阻挠女主角找到画家的原因，最后在雪原一样的月球上看到了那个画家心心念念想要她看到的画，那个渐渐离去的画家向她挥手然后消失。</p></blockquote><blockquote><p>这个时候实际暗示着女主角北海道之旅并没有找到人，只是看到了画家想让她看到的家乡的风景。她已经预见到画家大概已经不在了，但她依旧麻痹自己，说着无论什么地方我都会去找你的。继续进行着演艺事业，继续期待着画家的线索，走过怪兽的战场，上过月球，找着画家。直到飞船事件，这最后一根绷紧的线断裂了。</p><p>女主角的故事结束了，被送到了医院，一个求而不得失意之人的故事，一个拱门般的曲线到此应该结束了，但最后一刻，女主在病床上说，我还要去找他，瞧，钥匙我都戴好了。</p><p>整个故事的节奏就像女主角幻想中的飞船驶向遥远的宇宙一般，重新飞了起来。</p><p>她说过，无论什么地方我都会去找你的，无论生死，无论距离。</p><p>到死前，女主角从来没有为这样一次的人生后悔过，她即便因为记不得画家的面貌痛苦过，即便衰老不再年轻，即便一度丧失了追寻梦想的动力，但她依然要坚持自己。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/20210319004824.png" alt="绽放的睡莲"></p><blockquote><p>你知道睡莲的花语吗，是纯真。女主角在刚开始的时候和源也介绍自己庭院里的花，自己最喜欢的花。她说，现在快开了。</p><p>而在女主角死时，花开了。</p><p>她始终都是纯真的，以单纯的年轻的充满活力的姿态做着自己想做之事，坚持着自己的理想，做着最纯真的自己。</p></blockquote><h3 id="我喜欢那个追逐理想的自己，最纯真的自己。"><a href="#我喜欢那个追逐理想的自己，最纯真的自己。" class="headerlink" title="我喜欢那个追逐理想的自己，最纯真的自己。"></a>我喜欢那个追逐理想的自己，最纯真的自己。</h3><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/20210319004856.png" alt="千代子的逐梦"></p><hr><h2 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h2><p>扯了这么多，无非就是宣泄一下压抑在心中的情绪，记录下思想的流逝，那年今日，我造出了自己的梦，又亲手将它击碎。</p><p>时间流转，我又回到了这里，这个让我心碎，爱恨交加的地方</p><p>我填好申请表格再次提交，希望我的心结就此解开</p><p>你问我：还会继续吗？</p><p><strong>会</strong></p><hr><p><em>一个月后，希望能在这里再次和你相遇</em></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=29774186&auto=0&height=66"></iframe>]]></content>
    
    
    <categories>
      
      <category>思想</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>牛虻</title>
    <link href="/2021/01/26/gadfly/"/>
    <url>/2021/01/26/gadfly/</url>
    
    <content type="html"><![CDATA[<h1 id="牛虻"><a href="#牛虻" class="headerlink" title="牛虻"></a>牛虻</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1382561800&auto=0&height=66"></iframe><hr><h2 id="File00：Source"><a href="#File00：Source" class="headerlink" title="File00：Source"></a>File00：Source</h2><h3 id="故人"><a href="#故人" class="headerlink" title="故人"></a>故人</h3><p>我讨厌等待。</p><p>墙壁上的挂钟告诉我现在是下午一点半，客户应该出现了，但是很显然他没有准时赴约，不然你也不会看到这些文字。</p><p>看到挂钟我不由得想到一些事情：钟表最早被设计成指针式是由于技术限制，现在已经过去千年，为什么还要保持这么愚蠢的姿态进行生产和销售，为什么不全部采用数显式？</p><p><strong>“醒醒吧，这个时代时间的意义也只有这些了”</strong></p><p>确实如此，新新人类社会下的时间确实没有以前那么重要了，没有人需要岁月静好，也不会追求争分夺秒，生产力几乎完全解放，我们不再需要追求效益和速度，在这样的时代背景里，珍惜时间确实是一件可笑的事情。</p><p><strong>“但是？”</strong></p><p>但是这他妈不是迟到的理由，我一想到我还要为了这个操蛋的见面在这里一直等待就感觉烦闷不已，有点喘不上气来了，虽然我也没有洁癖，但是呆在这里的感觉就像在蟑螂池子里面游泳，每一次换气和呼吸都是对生命的挑战。</p><p>饭点刚刚过去，店内的嘈杂声却没有一同褪去，这是这里生意兴隆的象征。每个桌子上几乎都有吃剩的饭菜，没有收拾干净的餐具，甚至是客人的呕吐物（这家店的海鲜不太新鲜）。但是很奇怪的是除了餐桌之外的地方都干净整洁，这让整个画面显得十分不真实。</p><p>“您要喝点什么吗？”</p><p>我从思维迷宫探出身子，一位并不高大的女服务员用一双真诚的眼睛看着我，她可爱的外貌让那双眼睛变成一把利刃，刺向每一个她注视的人，但是她掩盖不住的是数日的疲倦和空虚，她渴望救赎，渴望被人关注，渴望世界的真理和法则，她还渴望….</p><p><strong>“爱”</strong></p><p>“你们这有没有什么喝了能让人思绪万千，口若悬河，同时又充满希望的东西？”我摘下眼镜，抛出我的疑问。</p><p>“我不太明白..您要的是酒吗？”</p><p>她显然被难住了，目光也不再锐不可挡，柔和了很多。看来她刚工作不久，还没有进入老手的状态，如果是一般的服务员，我这番话怕是会被当成傻子说的玩笑话打发吧。</p><p><strong>“我要的是爱”</strong></p><p>操，蟑螂飞起来了。</p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/illust_39759178_20210127_145931.png" alt="每个人都是脆弱又倔强的，正是这矛盾的事实促进了社会的进步"></p><h3 id="星河"><a href="#星河" class="headerlink" title="星河"></a>星河</h3><p>我挽起袖子看表，这才想起来我的手表还在卧室的床上呢，每天都要充电的手表让人感觉可笑至极。</p><p>“早上好朋友们，这里是心碎人俱乐部，再次温馨提醒，驾驶非自动载具的途中请勿收听本电台，以免发生意外情况….当然，生命只有一次，为什么不及时行乐，享受生活呢？调解器接入RM98.7，调正好坐姿，带您品味人生百态！”</p><p>啊，既然听到这段话了，那应该是早上8点，不过应该是火星标准时间，在家可听不到实感电台，不过今天的节目恐怕是得错过了，毕竟我还没到能闭着眼睛驾驶超越号的地步，不过也只有几个小时就到了，不在乎这一会。</p><p>就是不知道昨天电台里听到的故事后面如何了。</p><p>“抱歉，33号网格内的驾驶员请注意，重复，33号网格内的驾驶员请注意：黄道区域外发生一起飞船爆炸事故，目前大部分残骸已经成功回收控制，但少部分碎片正保持原动能向33号网格区域飞行，碎片数据已经成功追踪并上传，网格内驾驶员请注意避让，避免更大的损失，我们已经派出灾害应对小组，请注意飞船识别系统，路易斯商会对造成的不便再次表达歉意”</p><p>这是这个月第三起了，虽然这里一直不太平但怎么说也太多了一点，而且都是黄道面外，谁闲着没事会往那里跑呢？没有小行星更没有太空垃圾，就连最次的拾荒者也不会到那儿去。</p><p>不过商会的反应速度还挺快的，他们也许在吸食大众的血，破坏自然环境，但不得不说在面对天灾上他们处理的很好，从最初的地火安全飞行法案的提出，第一座人道主义太空救援站，到后来的火星农场和新城计划，他们也确确实实的做出了不小的贡献。</p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/illust_16983806_20210127_145850.png" alt="他不止一次的想过逃走，逃到世界的对立面"></p><h4 id="玫瑰在极地绽放"><a href="#玫瑰在极地绽放" class="headerlink" title="玫瑰在极地绽放"></a>玫瑰在极地绽放</h4><p>路易斯商会的势力一向直觉灵敏，在人们沉浸于太空观景和月背能源开采时，他们就已经把目标投向了火星。</p><p>十年的时间，也许无法让放射元素电池走完半衰期极限，但一定可以毁灭一座堕落的城市。火星在路易斯商会的基础设施上萌芽，壮大，然后腐败。</p><p>最初的人们也许会纠结于自然系统的承载力，但人类的科技一次又一次打破大众对世界的想象力，于是我们便高歌前行，头也不回地跌入扩张的深渊。</p><p>过度的发展严重破坏了火星的自然地貌，等离子探矿机的射线在劣质香烟和人工合成酒精的狂欢中无情地刺穿大地，地表开始出现一道道败给高功率恶魔的裂谷，仿佛在呐喊，宣告着自己受到的不公，但是这并不能阻止商会和人们的前行。</p><p>于是火星射仓便应运而生。</p><h4 id="空中骑士"><a href="#空中骑士" class="headerlink" title="空中骑士"></a>空中骑士</h4><p>借由比工质燃料更廉价的电磁轨道加速，将投射仓从裂谷的一边发射出去，划过一道精心计算的抛物线，落入架设好的减速磁网。这一切听起来简直像是黄金年代初期的科幻小说，但路易斯极进疯狂地将它带出了科幻世界的纸质媒体，强行架设在这片危机和机遇共存的土地上。</p><p>社会开始并不能接受这么狂野而硬核的运输工具，路易斯商会也深谙此事，但年轻的血脉总是会追寻新潮与时尚，商会利用媒体的外衣掩盖了舆论，于是射仓在一次次发射的浪潮中登上王位，成为上流社会的专属符号</p><hr><p>“抱歉让你久等了”</p><p>从餐厅众多嘈杂的声音中我听到了这句话，不需抬头我便知道是我要找的人，现在差不多过去二十分钟了这人才来，让我非常恼火。</p><p>“给我来一碟油炸小黄鱼，一大杯青岛”他脱下外套准备入座，丝毫不照顾我的胃口就开始点菜。</p><p>“我喝不了酒”我抬起头对着那位不知所措的服务员低声说道，同时看了看吧台里面，看来老板娘已经忙不过来了。</p><p>“那就再拿一杯红茶，加柠檬汁和冰块”</p><p>“这就给您准备”</p><p>我看着她离去的背影，心里涌现出万千思绪。</p><p><strong>“她不过是一个服务员，就和千千万万被安排了命运轨迹的人一样，被迫选择了合适自己的人生”</strong></p><p>“所以你的理想是什么？”</p><p>我有点错愕，不敢相信这是从他的嘴里说出来的</p><p>“不好意思我没明白”</p><p>我看着他：一个头发并不浓密的中年人，但因为发型打理的好显得发量充裕，剃得并不干净的络腮胡和一口浓烈的烟嗓。长款外套和针织马甲这一经典的搭配在他身上看起来却令他格外消瘦。</p><p>这竟然就是我现在需要依靠的人，看上去太不可靠了。</p><p>“抱歉，我的意思可能是「理想」或者「愿景」，你知道的，帮别人做事总得知道他们的需求”他从上衣口袋里抽出一支烟递给我，同时又摸出了打火机。</p><p>“谢谢，但是我不抽烟”</p><p>他的手定在半空，看了看手里的烟，又看了看我，随后笑了一下，收回了香烟。我又听到他合上打火机时极其细微的叹息声。</p><p>“好吧，良好公民，居家好男人，烟酒不沾。像你这样的人确实会找到我”</p><p>他侧身在外套里摸索，拿出了一个长条小盒子和一个信封。他把信封推给了我，自己则拿起盒子放进嘴里。</p><p>“33号桌，您的菜上齐了”</p><p>还是那位服务员，她摆好菜后看到他手里的盒子和他嘴里冒出的烟雾，善意的提醒我们这里禁止吸烟。</p><p>“无烟油式电子烟，无明火无热量，尼古丁焦油含量为零，这玩意你就当是加湿器好了”</p><p>他放下烟盒，朝桌子上吐出一大片雾气，我的杯壁上也沾满了水滴，让我感到一丝寒意。</p><p>“感谢您的配合，再次提醒，包厢内抽烟会导致火灾报警器启动，希望您不要造成不必要的麻烦”</p><p>我示意她可以离开了，另外走的时候把包厢的门关上。</p><p>我从那摊雾气中拿起信封，打开清点了一下里面的内容：一张身份认证芯片、三把钥匙和两张机票，三天后出发。</p><p>“你的情况很特殊，但是我还是帮你搞定了，不过在外人眼里我是客户，希望你能演的像一点”</p><p>他「善意」的提醒让我感到厌烦，不过我明白他说的是事实。我深吸了一口气，从大衣里抽出一张名片递给他。</p><p>“你可以叫我小陈，我们事务所已经看过您的邮件预约了，这边会尽快安排，请问你贵姓？”</p><p>“免贵姓唐”</p><p>他看了看名片，上面烫金的文字似乎让他有些犹豫，但很快他又打消了这种念头。</p><p>“我可以叫你伊斯特吗？”他指着名片上我的英文名字微笑的看着我。</p><p>“当然可以，我们…”</p><p>“伊斯特，我不太喜欢对别人用「小某」来称呼，这样会让那些人有自己低人一等的错觉，他们也许会借此逃避责任”</p><p>话说一半被打断，挺恼火的。但毕竟有求于人没有办法，我只能继续谈话。</p><p>“了解了，唐先生，你还有什么需求在邮件里面没有提及的吗”</p><p>“我需要你们事务所派人去一趟委内瑞拉，帮我收回我们公司的股权和资产，用和平的方式”</p><p>他猛吸一口烟，然后吐了个烟圈。</p><p>“我了解到你们事务所隶属于我们竞争对手公司的特殊性，不过我这个人不在乎这些东西，能完成目标就行”</p><p>“谢谢你对我们能力的肯定，我们会及时向你反馈进度”</p><p>我松了口气，一般谈到这里基本上就没事了，重要的是事务所的录音笔已经录到了我正当离开的理由，我的目的已经达到了。</p><p>他收起电子烟，拿起了酒杯，“我妹妹不喜欢我抽烟，所以我现在基本抽电子烟，但是这东西你明白的，就像吸空气一样没劲，还容易让胃着凉，我得漱漱口”</p><p>他端起酒杯，一趟下去杯子空了一半。</p><p>“抽烟确实对身体不好，你妹妹也挺关心你的”</p><p>我拿起红茶准备喝一口缓解一下我的嗓子，但是我显然低估了冰块的威力，感觉差点被冻伤。</p><hr><p><em>未完待续</em></p><hr><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>也许你有过类似<em>天人感应</em>的奇妙体会：跨越时空的阻碍，你的灵魂彷佛与千年以前或者是千里之外甚至是宇宙空间的某个人或物产生了共鸣。</p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/illust_53779028_20210127_145751.jpg" alt="书房里的空想家"></p><p>翻阅前人留下的文字和图像，你似乎能够看到创造者在那个无眠的黑夜完成它的景象，洞悉了他们的思想和习性，你不再是一个孤独的观测者，而是成为了切身经历千年历史的参与者。</p><p>这种感觉让我陶醉，为了能够复现当时的感受，我会尽我所能，创造出不逊前人的世界。这就是“<strong>牛虻</strong>”的起源。</p><p>牛虻是一种昆虫，吸食牛的血液为生，其实说真的，我也不知道为什么会想用它来命名这个工程</p><blockquote><p>我是伪君子，是灰域行者，我不谙世事，却以世界为食粮</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>连载</category>
      
      <category>牛虻</category>
      
    </categories>
    
    
    <tags>
      
      <tag>意识流</tag>
      
      <tag>Gadfly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>生活在引擎上</title>
    <link href="/2020/08/31/fullmarkCompositionGen/"/>
    <url>/2020/08/31/fullmarkCompositionGen/</url>
    
    <content type="html"><![CDATA[<h1 id="生活在引擎上"><a href="#生活在引擎上" class="headerlink" title="生活在引擎上"></a>生活在引擎上</h1><p>现代游戏设计学以宫本茂的“电子游戏也会把人带坏？他们当时也是这么说摇滚乐的。”为嚆矢。滥觞于艺术与计算机科学的期望正失去它们的借鉴意义。但面对看似无垠的未来天空，我想循西恩·帕伦特“好的代码，短小、简洁，并且匀称 - 而真正的挑战在于如何做到。”好过过早地振翮。</p><p>我们怀揣热忱的灵魂天然被赋予对超越性的追求，不屑于古旧坐标的约束，钟情于在别处的芬芳。但当这种期望流于对反解构主义不假思索的批判，乃至走向感觉与酒神主义时，便值得警惕了。与秩序的落差、错位向来不能为越矩的行为张本。而纵然我们已有翔实的蓝图，仍不能自持已在浪潮之巅立下了自己的沉锚。</p><p>“在名片上，我是公司总裁。在脑海中，我是游戏开发者。而在内心深处，我是一名玩家”岩田聪之言可谓切中了肯綮。人的交互性是不可祓除的，而我们欲上青云也无时无刻不在因风借力。计算机科学与艺术暂且被我们把握为一个薄脊的符号客体，一定程度上是因为我们尚缺乏体验与阅历去支撑自己的认知。而这种偏见的傲慢更远在知性的傲慢之上。</p><p>在孜孜矻矻以求游戏设计学意义的道路上，对自己的期望本就是在与计算机科学与艺术对接中塑型的动态过程。而我们的底料便是对不同传统RPG结构模式、不同艺术和技术的跨学科交互的觉感与体认。加布·纽维尔为艾伦·J·佩利送去潜显意识下的自我认知，又维系WBTB潜意识激发。他的游戏设计学观念是厚实的，也是实践的。倘若我们在对过往借约翰·卡马克之言“祓魅”后，又对不断膨胀的自我进行“赋魅”，那么在丢失外界预期的同时，未尝也不是丢了自我。</p><p>毫无疑问，从艺术与计算机科学角度一觇的自我有偏狭过时的成分。但我们所应摒弃的不是对此的批判，而是其批判的廉价，其对批判投诚中的反智倾向。在贾德·雷蒙德的观念中，如果在成为狮子与孩子之前，略去了像骆驼一样背负前人遗产的过程，那其“永远重复”洵不能成立。</p><p>蓝图上的落差终归只是理念上的区分，在实践场域的分野也未必明晰。譬如当我们追寻低面建模风格时，在途中涉足引擎预设方案，这究竟是伴随着期望的泯灭还是期望的达成？在我们塑造游戏设计学的同时，游戏设计学也在浇铸我们。既不可否认原生的可感性与反馈性，又承认自己的图景有轻狂的失真，不妨让体验走在言语之前。用不被禁锢的头脑去体味林纳斯·托瓦兹的大海与风帆，并效林纳斯·托瓦兹，对无法言说之事保持沉默。</p><p>用在引擎上的生活方式体现个体的超越性，保持婞直却又不拘泥于所谓“遗世独立”的单向度形象。这便是约翰·卡马克为我们提供的理想期望范式。生活在引擎上——始终热爱大地——升上天空。</p><h2 id="生成器狂潮"><a href="#生成器狂潮" class="headerlink" title="生成器狂潮"></a>生成器狂潮</h2><p>如果你略有关注时事，便能发现这篇文章是套用了今年浙江省高考备受争议的满分作文<code>《生活在树上》</code></p><p>幻想过高考时写篇满分作文的人想必不少，但理想中的满分作文是一副晦涩模样的人也应该不多。而浙江省作文阅卷大组组长钦点的满分作文<code>《生活在树上》</code>彻底点燃了我们的思维.</p><p>这篇满分作文用的尽是<em>嚆矢、滥觞、祓魅、婞直、振翮</em>等一般人闻所未闻的词汇，它已不再是大家日常吐槽的“这些字单个放着我都懂，搁一块我就看不明白了”，</p><p>而是更进一步的“啊，这个字我本来就不懂”…</p><p>这么晦涩的文章怎么就拿了个满分？</p><p>在大众对这篇作文里各种看不懂的元素津津乐道时，有一个富有娱乐精神的技术大佬拿《生活在树上》这篇文章做模板，创作出了一个名叫“<a href="http://beautyyu.top/full-mark-composition-generator/">满分作文生成器</a>”的工具.</p><p>在这个浮躁的娱乐主义社会中，能够结合技术和娱乐精神是一件值得称赞的事情，它让我们从快节奏的生活消遣中抬起头，睁开眼看待周遭的一切.</p><p>然后，便是义无反顾头也不回的跌入娱乐潮流之中.</p><p>但因为是生成器，所以大部分只能根据系统来拼接组合，并不能完全创造出新的歌曲，新的文章.</p><blockquote><p>“没有灵魂的事物，不足以令我们惋惜”</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Fun</category>
      
      <category>娱乐型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习案例</tag>
      
      <tag>GetSthNew</tag>
      
      <tag>意识流</tag>
      
      <tag>无病呻吟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微软视觉API初体验</title>
    <link href="/2020/08/21/ComputerVisionOnAzure/"/>
    <url>/2020/08/21/ComputerVisionOnAzure/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>构建复杂的图像处理和分析引擎非常昂贵。 一种替代方法是使用 Microsoft 的计算机视觉 API。 在本手册中，我们将探讨此 API 提供的功能，并调用该功能处理一些图像。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>Azure账户——创建“计算机视觉”服务</li><li>Python/C#/Java/Go/Js 开发环境（非必须）</li></ol><hr><p> <strong>作者在开始编写这个手册的时候并未深入学习python，只使用了Azure Cloud Shell对该API进行了调试和使用，如果你也还没掌握python又想体验微软视觉API的功能，请继续参阅本手册，否则建议在<a href="https://docs.microsoft.com/zh-cn/azure/cognitive-services/computer-vision/quickstarts-sdk/client-library?pivots=programming-language-python">微软官方手册</a>，查找更多教程！</strong></p><hr><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="1-启动Cloud-Shell"><a href="#1-启动Cloud-Shell" class="headerlink" title="1. 启动Cloud Shell"></a>1. 启动Cloud Shell</h3><p>打开Azure控制台，点击右上角的“Azure Cloud Shell”<br><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/TIM20200609162333.png" alt="Azure控制台"><br>这里会出现选择配置环境，建议选择PowerShell</p><p>如果是第一次配置，会出现下面的提示，打开左边的“高级选项”<br><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/TIM20200609162333-1.png" alt="创建存储"></p><p>这里的配置按照自己的喜好来即可，注意：</p><ul><li>区域一定要选择你当前所在的区域；</li><li>存储账户名称的长度必须在 3 到 24 个字符之间，并且只能使用数字和小写字母；</li><li>用户设置文件共享名称只能包含小写字母、数字和连字符，并且必须以字母或数字开头。该名称不能包含两个连续的连字符；<br><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/TIM20200609162333-2.png" alt="创建存储"><br>之后点击“创建存储”，稍等片刻</li></ul><p><em>有可能会报错，多半是命名不合法，按照提示修改即可</em></p><h3 id="2-创建认知服务帐户"><a href="#2-创建认知服务帐户" class="headerlink" title="2. 创建认知服务帐户"></a>2. 创建认知服务帐户</h3><p>等待Cloud Shell加载完成，显示欢迎信息则说明成功创建。<br><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/TIM202006091623333.png" alt="认知服务帐户"><br><em>上方的四行数据建议另存至记事本方便查询</em></p><p>我们需要 API 访问密钥来调用计算机视觉 API。 要获取访问密钥，我们需要一个计算机视觉 API 的认知服务帐户。 我们将使用 <code>az cognitiveservices create</code> 在订阅中创建帐户。</p><p>命令 <code>az cognitiveservices create</code> 用于在资源组中创建认知服务帐户。 调用此命令时，必须提供以下五个参数。</p><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">resource-group</td><td align="left">将拥有认知服务帐户的资源组，<strong>和前面创建的存储账户信息一致。</strong></td></tr><tr><td align="left">kind</td><td align="left">认知服务帐户的 API 名称。 针对此练习为“计算机视觉”，但可以基于内容审查器、人脸 API 等。</td></tr><tr><td align="left">name</td><td align="left">认知服务帐户名称</td></tr><tr><td align="left">sku</td><td align="left">认知服务帐户的 Sku（库存单位）。 针对此练习为 F0（免费层），但可以是 F0、S1、S2、S3 或 S4。<em>（S层都是收费层）</em></td></tr><tr><td align="left">location</td><td align="left">要从中调用此 API 的位置或区域， <strong>和前面创建的存储账户信息一致。</strong></td></tr></tbody></table><p>将下面这段代码输入控制台：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">az cognitiveservices account create<br>--kind ComputerVision<br>--name ComputerVisionService<br>--sku F0<br>--resource-group Demo_ComputerVision<br>--location southeastasia<br></code></pre></div></td></tr></table></figure><p>我们为 <code>ComputerVision API</code> 创建了认知服务帐户。 我们选择了 <code>F0 SKU</code> 并将帐户命名为<code>“ComputerVisionService”</code>。 我们的帐户属于资源组 <code>Demo_ComputerVision</code>，并且我们将从在 <code>location</code> 参数中设置的位置调用 API。</p><p>命令完成认知服务帐户的创建后，你会获得 JSON 响应，其中包括已设置为“成功”的“provisioningState”属性。<br><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/TIM202006091623334.png" alt="创建认知服务帐户"></p><h3 id="3-获取访问密钥"><a href="#3-获取访问密钥" class="headerlink" title="3. 获取访问密钥"></a>3. 获取访问密钥</h3><p>成功创建帐户后，我们可以检索此帐户的订阅密钥或访问密钥。</p><ol><li>在 Azure Cloud Shell 中执行以下命令</li></ol><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">az cognitiveservices account keys list <br>--name ComputerVisionService <br>--resource-group Demo_ComputerVision <br></code></pre></div></td></tr></table></figure><p>上述命令将返回与名为“ComputerVisionService”的认知服务帐户相关联的密钥，该帐户属于给定的资源组。 它将返回两个密钥 - 其中一个是备用密钥。 密钥很难记住，因此我们将第一个密钥存储在变量中，以便将变量用于对 API 的所有调用。</p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/TIM202006091623335.png" alt="获取访问密钥"></p><p>2.简化密钥，在 Azure Cloud Shell 中执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash">key=$(az cognitiveservices account keys list</span><br>--name ComputerVisionService<br>--resource-group Demo_ComputerVision<br>--query key1 -o tsv)<br></code></pre></div></td></tr></table></figure><p>Azure CLI 2.0 使用 –query 参数对命令的结果执行 JMESPath 查询。 JMESPath 是用于 JSON 的查询语言，提供从 CLI 输出中选择和显示数据的能力。 这些查询在任何显示格式化之前针对 JSON 输出执行。 Azure CLI 中的所有命令均支持 –query 参数。</p><p>在本示例中，我们查询名为“key1”条目的密钥列表，并将结果输出为“tsv”格式。 此格式删除字符串值周围的引号。 我们将结果分配给变量密钥。</p><ol start="3"><li>要查看密钥的值，请在 Azure Cloud Shell 中执行以下命令<figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">echo $key<br></code></pre></div></td></tr></table></figure><h5 id="现在，我们有帐户和密钥，可对-API-执行一些调用了！"><a href="#现在，我们有帐户和密钥，可对-API-执行一些调用了！" class="headerlink" title="现在，我们有帐户和密钥，可对 API 执行一些调用了！"></a>现在，我们有帐户和密钥，可对 API 执行一些调用了！</h5><h2 id="使用API"><a href="#使用API" class="headerlink" title="使用API"></a>使用API</h2><h3 id="1-识别图像中的特征点"><a href="#1-识别图像中的特征点" class="headerlink" title="1. 识别图像中的特征点"></a>1. 识别图像中的特征点</h3>让我们首先找到图像中的特征点。 我们将在此示例中使用下面的图像，但你可以随意尝试对其他图像的 URL 使用相同的命令。<br><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/illust_66933557_20200603_202939.jpg" alt="素材"><br>在 <code>Azure Cloud Shell</code> 中执行以下命令。 将命令中的 <code>&lt;region&gt;</code> 替换为认知服务帐户的区域。</li></ol><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">curl &quot;https://southeastasia.api.cognitive.microsoft.com/vision/v2.0/analyze?visualFeatures=Categories,Description&amp;details=Landmarks&quot;  <br>-H &quot;Ocp-Apim-Subscription-Key: $key&quot; <br>-H &quot;Content-Type: application/json&quot; <br>-d &quot;&#123;&#x27;url&#x27;:&#x27;https://hacboxstudio.azurewebsites.net/wp-content/uploads/2020/06/illust_66933557_20200603_202939-300x169.jpg&#x27;&#125;&quot; <br>| jq &#x27;.&#x27;<br></code></pre></div></td></tr></table></figure><p>其中的<code>Ocp-Apim-Subscription-Key</code>后面可以直接输入我们的密钥key1的值，也可以使用声明的变量<code>key</code><br><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/TIM202006091623337.png" alt="输出结果"></p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/TIM202006091623336.png" alt="输出结果"></p><ul><li>此调用会查找图像 URL 指定的图像中的特征点。我们现在分析的图像存储在本网页的存储库中。</li><li>该调用还会要求服务返回图像的类别信息和说明。 返回的说明是一句英文，我们可以看到微软的API对这个图像分析的结果是</li></ul><blockquote><p>“a group of people standing in front of a window”<br>可信度： 0.7655691527579038</p></blockquote><ul><li>如你所知，每次调用 API 都需要访问密钥。 在请求的 Ocp-Apim-Subscription-Key 标头上进行此设置。<h3 id="2-检查图像中是否具有不适宜内容"><a href="#2-检查图像中是否具有不适宜内容" class="headerlink" title="2. 检查图像中是否具有不适宜内容"></a>2. 检查图像中是否具有不适宜内容</h3>在此示例中，我们将分析图像中的成人内容。 置信度分数对图像包含成人或不雅内容的可能性评分。</li></ul><p>我们将在此示例中使用下面的图像，但你可以随意尝试对其他图像的 URL 使用相同的命令。<br><img src="https://docs.microsoft.com/zh-cn/learn/advocates/create-computer-vision-service-to-classify-images/media/3-people.png" alt="测试2"></p><ol><li>在 Azure Cloud Shell 中执行以下命令，替换 URL 中的 <code>&lt;region&gt;</code>。</li></ol><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">curl &quot;https://&lt;region&gt;.api.cognitive.microsoft.com/vision/v2.0/analyze?visualFeatures=Adult,Description&quot; \<br>-H &quot;Ocp-Apim-Subscription-Key: $key&quot; \<br>-H &quot;Content-Type: application/json&quot; \<br>-d &quot;&#123;&#x27;url&#x27; : &#x27;https://raw.githubusercontent.com/MicrosoftDocs/mslearn-process-images-with-the-computer-vision-service/master/images/people.png&#x27;&#125;&quot; \<br>| jq &#x27;.&#x27;<br></code></pre></div></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/TIM001.png" alt="输出结果2"></p><p>在此示例中，我们将 <code>visualFeatures</code> 设置为 <code>Adult,Description</code>。</p><p>可以看到输出结果中多了两个参数，响应提供了两个置信度得分，一个针对不雅内容，另一个针对成人内容。 通过使用这些分数以及图像说明和其他可视功能，可以开始标记发布到服务器的图像。</p><h3 id="3-调用计算机视觉-API-以生成缩略图"><a href="#3-调用计算机视觉-API-以生成缩略图" class="headerlink" title="3. 调用计算机视觉 API 以生成缩略图"></a>3. 调用计算机视觉 API 以生成缩略图</h3><p>计算机视觉首先生成高质量缩略图，然后通过分析图像中的对象来确定感兴趣区域 (ROI)。 然后，计算机视觉会裁剪图像以满足感兴趣区域的要求。 可以用户需求使用与原始图像的纵横比不同的纵横比显示生成的缩略图。 让我们看看该项目的运行情况。</p><p><code>generateThumbnail</code> 操作将创建具有用户指定的宽度和高度的缩略图。 默认情况下，服务会分析图像，标识感兴趣区 (ROI)，并根据 ROI 生成智能裁剪坐标。 当指定不同于输入图像的纵横比时，智能裁剪非常有用。 请求 URI 的格式如下：</p><p><code>https://&lt;region&gt;.api.cognitive.microsoft.com/vision/v2.0/generateThumbnail?width=&lt;...&gt;&amp;height=&lt;...&gt;&amp;smartCropping=&lt;...&gt;</code></p><p>可将不同的参数提供给该 API，以生成符合需要的适当缩略图。 <code>width</code> 和 <code>height</code> 参数是必需的。 它们将让 API 知道特定图像的所需大小。 <code>smartCropping</code> 参数通过分析图像中的所需区域来生成更智能的裁剪，使裁剪部分保留在缩略图中。 例如，启用智能裁剪后，经裁剪的个人资料图片会使相关人员的人脸部分保留在图片框内，即使此图像具有不同的纵横比。</p><h4 id="生成缩略图"><a href="#生成缩略图" class="headerlink" title="生成缩略图"></a>生成缩略图</h4><p>我们将在此示例中使用下面的图像，但你可以随意尝试对其他图像的 URL 使用相同的命令。<br><img src="https://docs.microsoft.com/zh-cn/learn/advocates/create-computer-vision-service-to-classify-images/media/4-dog.png" alt="测试3"></p><ol><li>在 Azure Cloud Shell 中执行以下命令。 将命令中的 <code>&lt;region&gt;</code> 替换为认知服务帐户的区域</li></ol><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">curl &quot;https://&lt;region&gt;.api.cognitive.microsoft.com/vision/v2.0/generateThumbnail?width=100&amp;height=100&amp;smartCropping=true&quot; \<br>-H &quot;Ocp-Apim-Subscription-Key: $key&quot; \<br>-H &quot;Content-Type: application/json&quot; \<br>-d &quot;&#123;&#x27;url&#x27; : &#x27;https://raw.githubusercontent.com/MicrosoftDocs/mslearn-process-images-with-the-computer-vision-service/master/images/dog.png&#x27;&#125;&quot; \<br>-o  thumbnail.jpg<br></code></pre></div></td></tr></table></figure><p>在此示例中，我们将要求服务创建尺寸为 100x100 的缩略图。 智能裁剪已启用。 成功的响应包含缩略图二进制文件，我们会将其写入一个名为 thumbnail.jpg 的文件。</p><h4 id="查看生成的缩略图"><a href="#查看生成的缩略图" class="headerlink" title="查看生成的缩略图"></a>查看生成的缩略图</h4><p>可以在 Azure Cloud Shell 存储帐户中找到生成的缩略图。 我们已将文件命名为 thumbnail.jpg。<br>按照以下说明，通过 Azure 门户下载缩略图。</p><ol><li><p>在 Azure Cloud Shell 中执行以下命令，确认主文件夹中存在文件 thumbnail.jpg。</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cd ~<br>ls -l<br></code></pre></div></td></tr></table></figure></li><li><p>执行以下命令，以将 <code>thumbnail.jpg</code> 移动到 <code>clouddrive</code> 文件夹。</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">mv ~/thumbnail.jpg ~/clouddrive<br></code></pre></div></td></tr></table></figure></li><li><p>登录<a href="https://portal.azure.com/">Azure 门户</a></p></li><li><p>在 Azure 门户菜单上或在门户主页中，选择“所有资源”，然后选择名称以 <code>cloudshell</code> 开头的存储帐户。</p></li><li><p>在存储帐户面板中，依次选择“存储资源管理器”、“文件共享”，再选择该集合中名称以 <code>cloudshellfiles</code> 开头的文件共享。</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/TIM002.png" alt="下载缩略图"></p><ol><li>选择<code>“thunbnail.jpg”</code>文件，然后从顶部菜单单击“下载”以查看图像。</li></ol><p>生成的缩略图：<img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/thumbnail11.jpg" alt="缩略图"></p><h3 id="4-从图像中检测并提取手写文字"><a href="#4-从图像中检测并提取手写文字" class="headerlink" title="4. 从图像中检测并提取手写文字"></a>4. 从图像中检测并提取手写文字</h3><p>我们将在此示例中使用下面的图像，但你可以随意尝试对其他图像的 URL 使用相同的命令。</p><p><img src="https://docs.microsoft.com/zh-cn/learn/advocates/create-computer-vision-service-to-classify-images/media/6-handwriting.jpg" alt="手写文字"></p><ol><li>在 Azure Cloud Shell 中执行以下命令。 将命令中的 <code>&lt;region&gt;</code> 替换为认知服务帐户的区域</li></ol><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">curl &quot;https://&lt;region&gt;.api.cognitive.microsoft.com/vision/v2.0/recognizeText?mode=Handwritten&quot; \<br>-H &quot;Ocp-Apim-Subscription-Key: $key&quot; \<br>-H &quot;Content-Type: application/json&quot; \<br>-d &quot;&#123;&#x27;url&#x27; : &#x27;https://raw.githubusercontent.com/MicrosoftDocs/mslearn-process-images-with-the-computer-vision-service/master/images/handwriting.jpg&#x27;&#125;&quot; \<br>-D -<br></code></pre></div></td></tr></table></figure><p>上述命令可将此操作的标头转储到控制台。 例如：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">HTTP/1.1 202 Accepted<br>Cache-Control: no-cache<br>Pragma: no-cache<br>Content-Length: 0<br>Expires: -1<br>Operation-Location: https://westus2.api.cognitive.microsoft.com/vision/v2.0/textOperations/d0e9b397-4072-471c-ae61-7490bec8f077<br>X-AspNet-Version: 4.0.30319<br>X-Powered-By: ASP.NET<br>apim-request-id: f5663487-03c6-4760-9be7-c9157fac10a1<br>Strict-Transport-Security: max-age=31536000; includeSubDomains; preload<br>x-content-type-options: nosniff<br>Date: Wed, 12 Sep 2018 19:22:00 GMT<br></code></pre></div></td></tr></table></figure><p><code>Operation-Location</code> 标头是完成后将发布结果的位置。</p><ol start="2"><li>复制 <code>Operation-Location</code> 标头值。</li><li>在 Azure Cloud Shell 中执行以下命令，将 <code>&quot;&lt;Operation-Location&gt;&quot;</code> 替换为上述步骤中复制的 <code>Operation-Location</code> 标头的值。</li></ol><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">curl -H &quot;Ocp-Apim-Subscription-Key: $key&quot; &quot;&lt;Operation-Location&gt;&quot; | jq &#x27;.&#x27;<br></code></pre></div></td></tr></table></figure><p>如果操作已完成，你将收到包含手写识别请求结果的 <code>JSON</code> 文件</p><p>输出展示：<img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/OCR.gif" alt="输出OCR"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>计算机视觉 API 是用于处理图像的强大工具。使用此服务，而不是构建你自己的 API，有可能为你节省大量开发和维护成本。 专注于编写业务逻辑来作出业务相关决策，并让计算机视觉 API 从图像中提取丰富的信息，以便分类和处理可视数据。</p><p>在此文档中，我们分析了图像，提取了文本，并生成了缩略图。 为调用计算机视觉 API，我们在 Azure 订阅中创建了认知服务帐户。 此帐户为我们提供调用所需的访问密钥。</p><p>本文仅通过Azure Cloud Shell展示这个API的功能，如果需要在个人项目中调用该API，后续我会再单独写一篇手册，如果等不及的话，可以在<a href="https://docs.microsoft.com/zh-cn/azure/cognitive-services/computer-vision/quickstarts-sdk/client-library?pivots=programming-language-python">微软官方手册</a>中查询有关资料。</p><p>本文部分内容引用自<a href="https://docs.microsoft.com/zh-cn/azure/cognitive-services/computer-vision/quickstarts-sdk/client-library?pivots=programming-language-python">微软官方手册</a>和<a href="https://docs.microsoft.com/zh-cn/learn/modules/create-computer-vision-service-to-classify-images/1-introduction">Microsoft Learn教程</a></p><p><em>写的好累…</em></p>]]></content>
    
    
    <categories>
      
      <category>Fun</category>
      
      <category>技术型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术文档</tag>
      
      <tag>学习案例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>八皇后问题</title>
    <link href="/2020/08/18/8Queens/"/>
    <url>/2020/08/18/8Queens/</url>
    
    <content type="html"><![CDATA[<h1 id="八皇后问题"><a href="#八皇后问题" class="headerlink" title="八皇后问题"></a>八皇后问题</h1><hr><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><blockquote><p> <strong>八皇后问题，一个古老而著名的问题，是回溯算法的典型案例。该问题由国际西洋棋棋手马克斯·贝瑟尔于 1848 年提出：在 8×8 格的国际象棋上摆放八个皇后，使其不能互相攻击，即任意两个皇后都不能处于同一行、同一列或同一斜线上，问有多少种摆法。高斯认为有 76 种方案。1854 年在柏林的象棋杂志上不同的作者发表了 40 种不同的解，后来有人用图论的方法解出 92 种结果。计算机发明后，有多种计算机语言可以编程解决此问题。</strong></p></blockquote><p><img src="https://bkimg.cdn.bcebos.com/pic/d1a20cf431adcbef8c2f33e5adaf2edda3cc9f3e?x-bce-process=image/watermark,g_7,image_d2F0ZXIvYmFpa2U5Mg==,xp_5,yp_5" alt="queens"></p><h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><p>在8 x 8的棋盘上面放置8个皇后，而且还要不在不同一行和不在同一列，不在同一斜线上，所以每行肯定是得放一个，但是位置就有好多的可能，只要满足上面的要求即可。</p><p>设棋盘是一个8 x 8矩阵，皇后i和皇后j的摆放位置分别为（i，Xi）和（j，Xj），要想这些皇后不在同一条斜线上，则需要这两个坐标点的斜率不等于 1 或 - 1。</p><p><strong>也就是满足|Xj —Xi | ≠ |j – i|</strong></p><p>这里采用迭代法解决八皇后问题，迭代就是循环代码中参与运算的变量同时是保存结果的变量，当前保存的结果作为下一次循环计算的初始值。</p><h4 id="什么是回溯法"><a href="#什么是回溯法" class="headerlink" title="什么是回溯法"></a>什么是回溯法</h4><blockquote><ul><li>使用回溯法解决问题的过程，实际上是建立一棵“状态树”的过程。例如，在解决列举集合{1,2,3}所有子集的问题中，对于每个元素，都有两种状态，取还是舍，所以构建的状态树为：<br><img src="http://data.biancheng.net/uploads/allimg/170905/2-1FZ5102U5E4.png" alt="树" title="树"></li><li>回溯法的求解过程实质上是先序遍历“状态树”的过程。树中每一个叶子结点，都有可能是问题的答案。图 1 中的状态树是满二叉树，得到的叶子结点全部都是问题的解。</li><li>在某些情况下，回溯法解决问题的过程中创建的状态树并不都是满二叉树，因为在试探的过程中，有时会发现此种情况下，再往下进行没有意义，所以会放弃这条死路，回溯到上一步。在树中的体现，就是在树的最后一层不是满的，即不是满二叉树，需要自己判断哪些叶子结点代表的是正确的结果。</li></ul></blockquote><h3 id="算法思路"><a href="#算法思路" class="headerlink" title="算法思路"></a>算法思路</h3><p>八皇后问题是使用回溯法解决的典型案例。算法的解决思路是：</p><ol><li>从棋盘的第一行开始，从第一个位置开始，依次判断当前位置是否能够放置皇后，判断的依据为：同该行之前的所有行中皇后的所在位置进行比较，如果在同一列，或者在同一条斜线上（斜线有两条，为正方形的两个对角线），都不符合要求，继续检验后序的位置。</li><li>如果该行所有位置都不符合要求，则回溯到前一行，改变皇后的位置，继续试探。</li><li>如果试探到最后一行，所有皇后摆放完毕，则直接打印出 8*8 的棋盘。最后一定要记得将棋盘恢复原样，避免影响下一次摆放。</li></ol><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-keyword">int</span> Queens[<span class="hljs-number">8</span>] = &#123;<span class="hljs-number">0</span>&#125;, Counts = <span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Check</span><span class="hljs-params">(<span class="hljs-keyword">int</span> line, <span class="hljs-keyword">int</span> <span class="hljs-built_in">list</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//遍历该行之前的所有行</span><br>    <span class="hljs-comment">//返回0则代表不能摆放，1代表可以摆放</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> index = <span class="hljs-number">0</span>; index &lt; line; index++)<br>    &#123;<br>        <span class="hljs-comment">//挨个取出前面行中皇后所在位置的列坐标</span><br>        <span class="hljs-keyword">int</span> data = Queens[index];<br>        <span class="hljs-comment">//如果在同一列，该位置不能放</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">list</span> == data)<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-comment">//如果当前位置的斜上方有皇后，在一条斜线上，也不行</span><br>        <span class="hljs-keyword">if</span> ((index + data) == (line + <span class="hljs-built_in">list</span>))<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-comment">//如果当前位置的斜下方有皇后，在一条斜线上，也不行</span><br>        <span class="hljs-keyword">if</span> ((index - data) == (line - <span class="hljs-built_in">list</span>))<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//如果以上都不是，当前位置就可以放</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-comment">//打印结果</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">print</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> line = <span class="hljs-number">0</span>; line &lt; <span class="hljs-number">8</span>; line++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> <span class="hljs-built_in">list</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">list</span> = <span class="hljs-number">0</span>; <span class="hljs-built_in">list</span> &lt; Queens[line]; <span class="hljs-built_in">list</span>++)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; 0&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; #&quot;</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">list</span> = Queens[line] + <span class="hljs-number">1</span>; <span class="hljs-built_in">list</span> &lt; <span class="hljs-number">8</span>; <span class="hljs-built_in">list</span>++)<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; 0&quot;</span>);<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;+——+——+——+——+——+——+\n&quot;</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">eight_queen</span><span class="hljs-params">(<span class="hljs-keyword">int</span> line)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//在数组中为0-7列</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> <span class="hljs-built_in">list</span> = <span class="hljs-number">0</span>; <span class="hljs-built_in">list</span> &lt; <span class="hljs-number">8</span>; <span class="hljs-built_in">list</span>++)<br>    &#123;<br>        <span class="hljs-comment">//对于固定的行列，检查是否和之前的皇后位置冲突</span><br>        <span class="hljs-keyword">if</span> (Check(line, <span class="hljs-built_in">list</span>))<br>        &#123;<br>            <span class="hljs-comment">//不冲突，以行为下标的数组位置记录列数</span><br>            Queens[line] = <span class="hljs-built_in">list</span>;<br>            <span class="hljs-comment">//如果最后一样也不冲突，证明为一个正确的摆法</span><br>            <span class="hljs-keyword">if</span> (line == <span class="hljs-number">7</span>)<br>            &#123;<br>                <span class="hljs-comment">//统计摆法的Counts加1</span><br>                Counts++;<br>                <span class="hljs-comment">//输出这个摆法</span><br>                print();<br>                <span class="hljs-comment">//每次成功，都要将数组重归为0</span><br>                Queens[line] = <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            <span class="hljs-comment">//继续判断下一样皇后的摆法，递归</span><br>            eight_queen(line + <span class="hljs-number">1</span>);<br>            <span class="hljs-comment">//不管成功失败，该位置都要重新归0，以便重复使用。</span><br>            Queens[line] = <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//调用回溯函数，参数0表示从第一行开始演算</span><br>    eight_queen(<span class="hljs-number">0</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;摆放方式有%d种&quot;</span>, Counts);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox@master/2.png" alt="结果1"> <img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox@master/3.png" alt="结果2"></p><h5 id="每次结果都会进行输出，用0代替空格棋盘，-代替皇后位置，一共92种摆法"><a href="#每次结果都会进行输出，用0代替空格棋盘，-代替皇后位置，一共92种摆法" class="headerlink" title="每次结果都会进行输出，用0代替空格棋盘，#代替皇后位置，一共92种摆法"></a>每次结果都会进行输出，用0代替空格棋盘，#代替皇后位置，一共92种摆法</h5>]]></content>
    
    
    <categories>
      
      <category>算法问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术文档</tag>
      
      <tag>学习案例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>汉诺塔问题</title>
    <link href="/2020/08/16/hanoi/"/>
    <url>/2020/08/16/hanoi/</url>
    
    <content type="html"><![CDATA[<h1 id="Hanoi"><a href="#Hanoi" class="headerlink" title="Hanoi"></a>Hanoi</h1><hr><h1 id="C语言-汉诺塔问题"><a href="#C语言-汉诺塔问题" class="headerlink" title="C语言-汉诺塔问题"></a>C语言-汉诺塔问题</h1><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><blockquote><p>法国数学家爱德华·卢卡斯曾编写过一个印度的古老传说：在世界中心贝拿勒斯（在印度北部）的圣庙里，一块黄铜板上插着三根宝石针。印度教的主神梵天在创造世界的时候，在其中一根针上从下到上地穿好了由大到小的64片金片，这就是所谓的汉诺塔。不论白天黑夜，总有一个僧侣在按照下面的法则移动这些金片：一次只移动一片，不管在哪根针上，小片必须在大片上面。僧侣们预言，当所有的金片都从梵天穿好的那根针上移到另外一根针上时，世界就将在一声霹雳中消灭，而梵塔、庙宇和众生也都将同归于尽。</p></blockquote><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>汉诺塔问题是递归算法的经典，可以说只要理解了递归核心算法，就理解了整个算法的结构。</p><h6 id="对于汉诺塔问题，可以分下面几种情况："><a href="#对于汉诺塔问题，可以分下面几种情况：" class="headerlink" title="对于汉诺塔问题，可以分下面几种情况："></a>对于汉诺塔问题，可以分下面几种情况：</h6><ol><li>当只移动一个圆盘时，直接将圆盘从 A 针移动到 C 针。</li><li>若移动的圆盘为 n(n&gt;1)，则分成几步走：<ol><li> 把 (n-1) 个圆盘从 A 针移动到 B 针（借助 C 针）；</li><li> A 针上的最后一个圆盘移动到 C 针；</li><li> B 针上的 (n-1) 个圆盘移动到 C 针（借助 A 针）；<h6 id="每做一遍，移动的圆盘少一个，逐次递减，最后当-n-为-1-时，完成整个移动过程。"><a href="#每做一遍，移动的圆盘少一个，逐次递减，最后当-n-为-1-时，完成整个移动过程。" class="headerlink" title="每做一遍，移动的圆盘少一个，逐次递减，最后当 n 为 1 时，完成整个移动过程。"></a>每做一遍，移动的圆盘少一个，逐次递减，最后当 n 为 1 时，完成整个移动过程。</h6></li></ol></li></ol><h2 id="源码展示"><a href="#源码展示" class="headerlink" title="源码展示"></a>源码展示</h2><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">move</span><span class="hljs-params">(<span class="hljs-keyword">char</span> getone, <span class="hljs-keyword">char</span> putone)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c--&gt;%c\n&quot;</span>, getone, putone);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">hanoi</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n, <span class="hljs-keyword">char</span> one, <span class="hljs-keyword">char</span> two, <span class="hljs-keyword">char</span> three)</span> <span class="hljs-comment">/*将n个盘从one借助two,移到three*/</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (n == <span class="hljs-number">1</span>)<br>        move(one, three);<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        hanoi(n - <span class="hljs-number">1</span>, one, three, two);          <span class="hljs-comment">//</span><br>        move(one, three);                       <span class="hljs-comment">//核心代码</span><br>        hanoi(n - <span class="hljs-number">1</span>, two, one, three);          <span class="hljs-comment">//</span><br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> m;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;输入盘子数量:&quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;m);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;移动 %3d 个盘子的步骤为:\n&quot;</span>, m);<br>    hanoi(m,<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法问题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术文档</tag>
      
      <tag>学习案例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>炉石低保问题</title>
    <link href="/2020/08/15/HearthStoneQuestion/"/>
    <url>/2020/08/15/HearthStoneQuestion/</url>
    
    <content type="html"><![CDATA[<h1 id="HearthStoneQuestion"><a href="#HearthStoneQuestion" class="headerlink" title="HearthStoneQuestion"></a>HearthStoneQuestion</h1><h2 id="本文在Github同步更新！图片无法阅读请移步至Github！"><a href="#本文在Github同步更新！图片无法阅读请移步至Github！" class="headerlink" title="本文在Github同步更新！图片无法阅读请移步至Github！"></a>本文在<a href="https://github.com/xX-Hacbox-Xx/HearthStoneQuestion/">Github</a>同步更新！图片无法阅读请移步至Github！</h2><hr><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p> 旧版的炉石传说天梯机制中，如果想要在天梯模式下”拿低保”需要拿到50个星。玩家每赢一局得一颗星，如果赢了之后总共达到三次及以上的连胜则当次再得一颗星即共得两颗星，而如果玩家输了则会失去一颗星。在0星基础上，给定玩家胜率和上低保需要的星数，如何求解拿低保的期望局数？</p><h2 id="问题难点"><a href="#问题难点" class="headerlink" title="问题难点"></a>问题难点</h2><h3 id="1-随机数的生成"><a href="#1-随机数的生成" class="headerlink" title="1. 随机数的生成"></a>1. 随机数的生成</h3><p>在学习过程中我发现C语言的生成随机数函数<code>rand()</code>生成的数字并不“随机”</p><p>在查询资料后得知<code>rand()</code> 函数产生的随机数是伪随机数，是根据一个数值按照某个公式推算出来的，这个数值我们称之为“种子”</p><blockquote><p>种子在每次启动计算机时是随机的，但是一旦计算机启动以后它就不再变化了；也就是说，每次启动计算机以后，种子就是定值了，所以根据公式推算出来的结果（也就是生成的随机数）就是固定的。</p></blockquote><p>所以接下来我们会使用<code>srand()</code>函数对种子<code>“重新播种”</code>，这样种子数字就会发生变化</p><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">srand</span> <span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> seed)</span></span>;<br></code></pre></div></td></tr></table></figure><p>它需要一个 unsigned int 类型的参数。在实际开发中，我们可以用时间作为参数，只要每次播种的时间不同，那么生成的种子就不同，最终的随机数也就不同。<br>使用 <code>&lt;time.h&gt; </code>头文件中的 <code>time()</code> 函数即可得到当前的时间（精确到秒），就像下面这样</p><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c">srand((<span class="hljs-keyword">unsigned</span>)time(<span class="hljs-literal">NULL</span>));<br></code></pre></div></td></tr></table></figure><p>所以修改后的随机数生成代码如下：</p><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> a;<br>    srand((<span class="hljs-keyword">unsigned</span>)time(<span class="hljs-literal">NULL</span>));<br>    a = rand();<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, a);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>多次运行程序，会发现每次生成的随机数都不一样了，但是，这些随机数会有逐渐增大或者逐渐减小的趋势，这是因为我们以时间为种子。</p><h5 id="再次遇到问题"><a href="#再次遇到问题" class="headerlink" title="再次遇到问题"></a>再次遇到问题</h5><p>在第一版的代码中会发现生成的胜率总是一样的，比如说1000次模拟中胜率每次都是0.6，我排查了很久才发现问题的关键：<br><strong>生成的随机数使用时间（秒）为种子，但是计算机模拟100甚至1000次的时间都远远少于一秒</strong><br>这就是为什么1000次的模拟中胜率总是不变的。</p><h5 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h5><p>这个问题我从网络上找了一个播种随机数的函数方便程序设计，出处见<a href="https://blog.csdn.net/morixinguan/article/details/50704925" title="C语言之实现随机数产生算法-CSDN">C语言之实现随机数产生算法-CSDN</a>.</p><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c"><span class="hljs-comment">/* 实现伪随机数的支持 */</span><br><span class="hljs-function"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> <span class="hljs-title">Curl_rand</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> r;<br>  <span class="hljs-comment">/* 返回一个无符号32位整型的伪随机数. */</span><br>  r = randseed = randseed * <span class="hljs-number">1103515245</span> + <span class="hljs-number">12345</span>;<br>  <span class="hljs-keyword">return</span> (r &lt;&lt; <span class="hljs-number">16</span>) | ((r &gt;&gt; <span class="hljs-number">16</span>) &amp; <span class="hljs-number">0xFFFF</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Curl_srand</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-comment">/* 产生随机的伪随机数序列。 */</span><br>  randseed = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>) time(<span class="hljs-literal">NULL</span>);<br>  Curl_rand();<br>  Curl_rand();<br>  Curl_rand();<br>&#125;<br></code></pre></div></td></tr></table></figure><blockquote><p>“不要重复造轮子”</p></blockquote><h2 id="源码展示"><a href="#源码展示" class="headerlink" title="源码展示"></a>源码展示</h2><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;math.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-keyword">static</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> randseed;<br><span class="hljs-keyword">long</span> longRounds=<span class="hljs-number">0</span>; <span class="hljs-comment">/*游戏总局数*/</span><br><span class="hljs-keyword">long</span> longWin=<span class="hljs-number">0</span>; <span class="hljs-comment">/*玩家赢得次数*/</span><br><span class="hljs-keyword">int</span> intStar=<span class="hljs-number">0</span>; <span class="hljs-comment">/*玩家获得的星星数*/</span><br><span class="hljs-keyword">int</span> intWinTimes=<span class="hljs-number">0</span> ;<span class="hljs-comment">/*连续赢的次数*/</span><br><span class="hljs-keyword">double</span> dbWinArea=<span class="hljs-number">0</span>;<span class="hljs-comment">//赢的局数平均值</span><br><span class="hljs-comment">/* 实现伪随机数的支持 */</span><br><span class="hljs-function"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> <span class="hljs-title">Curl_rand</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> r;<br>  <span class="hljs-comment">/* 返回一个无符号32位整型的伪随机数. */</span><br>  r = randseed = randseed * <span class="hljs-number">1103515245</span> + <span class="hljs-number">12345</span>;<br>  <span class="hljs-keyword">return</span> (r &lt;&lt; <span class="hljs-number">16</span>) | ((r &gt;&gt; <span class="hljs-number">16</span>) &amp; <span class="hljs-number">0xFFFF</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Curl_srand</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-comment">/* 产生随机的伪随机数序列。 */</span><br>  randseed = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>) time(<span class="hljs-literal">NULL</span>);<br>  Curl_rand();<br>  Curl_rand();<br>  Curl_rand();<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gaming</span><span class="hljs-params">()</span> <span class="hljs-comment">/*一次游戏*/</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">int</span> result=Curl_rand() %<span class="hljs-number">2</span>;<br>longRounds++; <span class="hljs-comment">/*总局数+1 */</span><br><span class="hljs-keyword">if</span> (result==<span class="hljs-number">0</span> &amp;&amp; intStar&gt;<span class="hljs-number">0</span>) <span class="hljs-comment">/*玩家输*/</span><br>&#123;<br>intStar--;<br>intWinTimes=<span class="hljs-number">0</span>; <span class="hljs-comment">/*连赢局数清零*/</span><br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>longWin++;<span class="hljs-comment">/*玩家赢的总局数+1*/</span><br><br><span class="hljs-keyword">if</span> (intWinTimes&lt;<span class="hljs-number">2</span>) intStar++; <span class="hljs-comment">/*连续win的不足2局*/</span><br><span class="hljs-keyword">else</span> <span class="hljs-comment">/*连续win的不少于2局*/</span><br>intStar+=<span class="hljs-number">2</span>;<br>intWinTimes++;<br><span class="hljs-comment">/*连赢局数+1*/</span><br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">play</span><span class="hljs-params">(<span class="hljs-keyword">int</span> i)</span> </span>&#123;<br><span class="hljs-keyword">while</span>(<span class="hljs-number">10</span>&gt;<span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-comment">/*游戏进行*/</span><br>gaming();<br><span class="hljs-keyword">if</span> (intStar&gt;=<span class="hljs-number">50</span>) <span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;第%4d次模拟：总局数=%-6ld，胜局数=%-6ld，获得50颗星星的胜率=%5.2f ％\n&quot;</span>,i,longRounds,longWin,<span class="hljs-number">100.00</span>*longWin/longRounds);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> intRuns=<span class="hljs-number">1000</span>; <span class="hljs-comment">/*尝试模拟次数*/</span><br><span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;<br>Curl_srand();<br><span class="hljs-keyword">for</span> (i=<span class="hljs-number">1</span>;i&lt;=intRuns;i++)<br>&#123;<br>longRounds=<span class="hljs-number">0</span>; <span class="hljs-comment">/*游戏总局数*/</span><br>longWin=<span class="hljs-number">0</span>; <span class="hljs-comment">/*玩家赢得次数*/</span><br>intStar=<span class="hljs-number">0</span>; <span class="hljs-comment">/*玩家获得的星星数*/</span><br>intWinTimes=<span class="hljs-number">0</span> ;<span class="hljs-comment">/*连续赢的次数*/</span><br>play(i);<br>dbWinArea+=longWin;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n------------------------------------\n模拟%d次，获得50颗星星需要赢的次数平均值=%d&quot;</span>,intRuns,(<span class="hljs-keyword">int</span>)(dbWinArea/intRuns));<br>getchar();<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Fun</category>
      
      <category>技术型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/08/13/hello-world/"/>
    <url>/2020/08/13/hello-world/</url>
    
    <content type="html"><![CDATA[<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>大学时，学C语言的第一个Demo：</p><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C"><span class="hljs-comment">// Demo01:</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hello, world&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>配置好环境，笨拙地输入代码，黑窗体中便跳动出小小的一句”Hello, world”，后续便了解到这是学习计算机语言传统规矩。</p><p>程序员通过这段代码了解程序结构，语言逻辑，同时也能直观的看到自己所写的程序的结果。让人幻想自己以后写得出庞大复杂的项目….感觉真不错。</p><p>学了不久，自以为这个例子并不适合当代学生，有许许多多更好的例子可以打开语言的学习，但确实不可否认这个Demo的象征意义算是十足的第一，要怪就怪 <em>Brian Kernighan</em> 和 <em>Dennis M. Ritchie</em>. </p><p>所以当一切从新开始的时候，我也一定会对眼前的你说一句“Hello, world!”</p><h3 id="永生的秘密"><a href="#永生的秘密" class="headerlink" title="永生的秘密"></a>永生的秘密</h3><p>人类的平均寿命仍然没有突破2位数，但是历史上依然有人活到了今天.</p><blockquote><p>“有的人8岁就死了，80岁才埋”</p></blockquote><p>当然不是说这句话.</p><p>诗人，艺术家，思想家，科学家…诸如一切类目的“家”，都可以将其称之为某个领域的<strong>开拓者</strong>或者<strong>先驱者</strong>,他们都获得了永生，不信？我举个例子：</p><blockquote><p>君不见黄河之水天上来，奔流到海不复回</p></blockquote><p>说这的是<em>李白</em></p><blockquote><p>蒙娜丽莎的微笑</p></blockquote><p>画这的是<em>达·芬奇</em></p><blockquote><p>朝闻道，夕死可矣</p></blockquote><p>说这的是<em>孔子</em></p><blockquote><p>相对论及质能关系式</p></blockquote><p>提出者是<em>爱因斯坦</em></p><hr><h3 id="世界是一片荒原"><a href="#世界是一片荒原" class="headerlink" title="世界是一片荒原"></a>世界是一片荒原</h3><p>永生的秘密一直都在那里，却一直有很多人视而不见，或者认为这是先驱者的身份导致，其实并不如此，司马迁的《史记》都记了大大小小的普通人，而且普通人比达官贵人读起来有意思多了。</p><p>时代不同，《史记》也换了载体，但无论是什么时候，想要留下痕迹和证明的想法始终藏在我们心里，但是好看的皮囊违反法律法规，有趣的灵魂又涉嫌帐号违规，而且想在健忘的互联网留下记忆，始终是一件愚蠢的事情。</p><p>肚子里没货，没人真正愿意记住你。</p><h3 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h3><p>做一个穿梭在互联网中的灰域行者，记录自己的感悟和想法，当然也有努力学习，这才是我奉行的信条。总有一天网络中的资源和努力终将会变现，改变自己。为了让自己往生能有回忆，我决定写下这些片段.</p><p>或许十年，也许是三年后，这里也会一片荒芜，或许是我成功登上彼岸，也可能是我疲于思考，踏上了前往满洲里的列车。如果都没有，那也许是另一种结果.</p><p>谢谢你读到这里，有趣的陌生人，过去、未来和现在，都在这块屏幕上汇聚，但是思想和精神是超越时间的存在。请让我对素未谋面的你送出我的祝福，</p><p>祝你前程似锦.</p>]]></content>
    
    
    <categories>
      
      <category>思想</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>世界是一片荒原</title>
    <link href="/2020/08/13/%E4%B8%96%E7%95%8C%E6%98%AF%E4%B8%80%E7%89%87%E8%8D%92%E5%8E%9F/"/>
    <url>/2020/08/13/%E4%B8%96%E7%95%8C%E6%98%AF%E4%B8%80%E7%89%87%E8%8D%92%E5%8E%9F/</url>
    
    <content type="html"><![CDATA[<p>时过境迁，满洲里是否有大象已不再重要，但是前往那里，依然是他的夙愿。</p><p>满洲里和大象等意象，出自电影《大象席地而坐》</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<h2 id="初网"><a href="#初网" class="headerlink" title="初网"></a>初网</h2><h3 id="互联网曾经从封闭走向开放，如今又走向了封闭"><a href="#互联网曾经从封闭走向开放，如今又走向了封闭" class="headerlink" title="互联网曾经从封闭走向开放，如今又走向了封闭"></a>互联网曾经从封闭走向开放，如今又走向了封闭</h3><p>2008年的互联网，和现在早已经判若两个世界。她有没有变得更好呢？我不得而知，但我能感受到的是，有很多东西已经 “不在了”。</p><p>在那个遥远的互联网，是一个奇人遍地走的地方；现在的互联网，也是一个“奇人”遍地走的地方。说实话，我更喜欢以前的网络环境。</p><p>那个遥远时代的互联网被称为“初网”</p><p><img src="https://cdn.jsdelivr.net/gh/xX-Hacbox-Xx/Hacbox/pic_bed/blog_pic/photomode_24122020_022712.png" alt="ReachTheCyberSpace_Cyberpunk2077"></p><h3 id="是什么改变了互联网呢"><a href="#是什么改变了互联网呢" class="headerlink" title="是什么改变了互联网呢"></a>是什么改变了互联网呢</h3><p>很遗憾，这个问题我不得而知，这也许是多方因素导致的，但有一点可以肯定：</p><blockquote><p>接入赛博空间的门槛大大降低，是初网 <em>消逝</em> 的原因之一</p></blockquote><p>其实初网并没有消失，她只是 <em>藏起来</em> 了，任何人都可以在设备门槛较低的情况下通向互联网，大量信息的涌入，<strong>冲淡</strong>了初网。</p><p>想到这里，我的心里升起一缕感伤，我也不知道这是好是坏</p><blockquote><p>“我们是旧时代的残党，新时代没有能载我们的船”</p></blockquote><p>但是，人总会有出路的。</p><p>于是你来到了这里</p><h2 id="我在哪？"><a href="#我在哪？" class="headerlink" title="我在哪？"></a>我在哪？</h2><blockquote><p>欢迎！我白天是个普通的学者，晚上则是个有抱负的“技术人员”。这里是我的密港，在这个时间和空间都是永恒的角落，绽放自己的光芒。</p></blockquote><p>这个站点是一个被时代和潮流簇拥的奇点，你现在正处在这个奇点上的一个小小的空间内</p><h3 id="灰域"><a href="#灰域" class="headerlink" title="灰域"></a>灰域</h3><p>互联网是我们当下最接近“异世界”的场所，跨越时间和空间，你能在最短的时间获取世界上每一个角落的新鲜事物，但是若想再次体验曾经那种 <em>在一片尚未开拓的处女地寻宝</em> 的感受，怕是很难再轻易尝到了。</p><p>在初网和当今互联网的夹缝中，有一块狭窄的空间</p><p>这里充斥着私人站点、BBS、个人博客。</p><p>遨游其中发现一个个宝藏站点，能让我们找寻到一丝丝 <em>初网</em> 的气息</p><p><strong>那里被称为“灰域”，而我正是穿梭其中的 <em>灰域行者</em></strong></p><h2 id="我如何联系你？"><a href="#我如何联系你？" class="headerlink" title="我如何联系你？"></a>我如何联系你？</h2><p>上面有我的社交媒体链接，当然你也可以直接在某一文章页留言。</p><h2 id="这里有什么"><a href="#这里有什么" class="headerlink" title="这里有什么"></a>这里有什么</h2><p>这里汇聚了一切无用而且多此一举的智慧结晶，希望你在罐头盒中玩的愉快。</p><p>有的开发文档和随笔会同步到这，欢迎阅读。</p>]]></content>
    
  </entry>
  
  
  
</search>
